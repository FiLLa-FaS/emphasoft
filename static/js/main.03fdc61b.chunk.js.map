{"version":3,"sources":["base/theme.js","components/FormAuth/fields.js","components/FormAuth/validation.js","components/FormAuth/index.js","components/ListUsers/index.js","components/Input/index.js","ViewAuth.js","ViewUsers.js","App.js","serviceWorker.js","index.js"],"names":["GlobalTheme","breakpoints","xs","sm","md","lg","xl","FormFields","username","password","validation","yup","shape","typeError","required","Wrapper","styled","div","FormAuth","submitAuth","axios","require","default","initialValues","fields","validationSchema","validateOnBlur","onSubmit","values","post","then","response","Cookies","set","data","token","console","log","get","catch","error","authorizeUser","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","className","htmlFor","type","name","onChange","onBlur","value","disabled","onClick","ul","ListUsers","users","title","map","user","key","id","first_name","last_name","input","Input","props","ViewAuth","useState","isSubmitting","setIsSubmitting","to","ErrorMessage","p","ViewUsers","currentUsers","is_active","is_superuser","sortedUsers","sortBy","searchTerm","setSearchTerm","searchResults","setSearchResults","useEffect","debounce","results","filter","toLowerCase","includes","placeholder","e","target","length","showSearchResults","App","theme","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.03fdc61b.chunk.js","sourcesContent":["export const GlobalTheme = {\r\n    breakpoints: {\r\n        xs: 0,\r\n        sm: 576,\r\n        md: 768,\r\n        lg: 992,\r\n        xl: 1200\r\n    }}","const FormFields = {\r\n    username: '',\r\n    password: ''\r\n}\r\nexport default FormFields","import * as yup from 'yup'\r\n\r\nconst validation = yup.object().shape({\r\n    username: yup.string().typeError('Должно быть строкой').required('Обязательно'),\r\n    password: yup.string().typeError('Должно быть строкой').required('Обязательно')\r\n})\r\n\r\nexport default validation","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Formik} from 'formik'\r\nimport Cookies from 'js-cookie'\r\nimport fields from './fields'\r\nimport validation from './validation'\r\n\r\nconst FormAuth = ({submitAuth}) => {\r\n \r\n    const axios = require('axios').default;\r\n    \r\n    const authorizeUser = (values) => {\r\n        axios.post('http://emphasoft-test-assignment.herokuapp.com/api-token-auth/', {\r\n        username: values.username,\r\n        password: values.password\r\n      })\r\n      .then((response) => {\r\n        Cookies.set('token', response.data.token);\r\n        submitAuth();\r\n        console.log(response, 'response', Cookies.get('token'), 'token');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error, 'error');\r\n      });\r\n      }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Formik\r\n                initialValues={fields}\r\n                validationSchema={validation}\r\n                validateOnBlur\r\n                onSubmit={(values) => {authorizeUser(values)}}\r\n                >{({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"form\">\r\n                        <p>\r\n                            <label htmlFor=\"username\">Логин</label>\r\n                            <input className=\"input\" type=\"text\" name=\"username\" onChange={handleChange} onBlur={handleBlur} value={values.username}/>\r\n                        </p>\r\n                        {touched.username && errors.username && <p className=\"error\">{errors.username}</p>}\r\n                        <p>\r\n                            <label htmlFor=\"password\">Пароль</label>\r\n                            <input className=\"input\" type=\"password\" name=\"password\" onChange={handleChange} onBlur={handleBlur} value={values.password}/>\r\n                        </p>\r\n                        {touched.password && errors.password && <p className=\"error\">{errors.password}</p>}\r\n                        <button disabled={!isValid && !dirty} onClick={handleSubmit} type=\"submit\">Отправить</button>\r\n                    </div>\r\n            )}</Formik>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n.form {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    width: 400px;\r\n    padding: 24px;\r\n    margin: 10px auto 0;\r\n    border: solid 1px #eee;\r\n    border-radius: 24px;\r\n}\r\n\r\n.input {\r\n    display: block;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    line-height: 1.5em;\r\n    border-radius: 4px;\r\n    border: solid 1px #eee;\r\n    padding: 4px 6px;\r\n}\r\n\r\n.error {\r\n    color: red;\r\n    font-weight: 700;\r\n    font-size: 12px;\r\n}\r\n`\r\n\r\nexport default FormAuth","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ListUsers = ({users, title}) => {\r\n    return <Wrapper>\r\n    <h2 className=\"title\">{title}</h2>\r\n        {users.map(user => (\r\n                    <li key={user.id} className=\"user-item\">\r\n                        <h2 className=\"user-item__title\">{user.first_name} {user.last_name}</h2>\r\n                        <p className=\"user-item__id\">ID - {user.id}</p>\r\n                        <p className=\"user-item__username\">Логин - {user.username}</p>\r\n                    </li>\r\n                ))}\r\n    </Wrapper>\r\n}\r\n\r\nconst Wrapper = styled.ul`\r\nfont-family: Arial, Helvetica, sans-serif;\r\nlist-style: none;\r\npadding: 0;\r\n\r\n.title {\r\n    text-align: center;\r\n  font-weight: 900;\r\n  font-size: 36px;\r\n}\r\n\r\n.user-item {\r\nmargin-top: 20px;\r\n\r\n&:first-of-type {\r\n    margin-top: 0;\r\n}\r\n\r\n    &__title {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-size: 36px;\r\n        font-weight: 700;\r\n    }\r\n\r\n    &__id {\r\n        padding: 0;\r\n        margin: 15px 0 0 0;\r\n        font-size: 24px;\r\n    }\r\n\r\n    &__username {\r\n        padding: 0;\r\n        margin: 15px 0 0 0;\r\n        font-size: 28px;\r\n        font-style: italic;\r\n    }\r\n}\r\n`\r\n\r\nexport default ListUsers","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = (props) => {\r\n  return <Wrapper {...props} />;\r\n};\r\n\r\nconst Wrapper = styled.input`\r\n  margin-bottom: 20px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport default Input;\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {FormAuth} from './components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst ViewAuth = () => {\r\n\r\n\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const showAuth = () => {\r\n        if(isSubmitting) {\r\n            return <p className=\"success-auth\">\r\n            Вы успешно авторизованы!\r\n        </p>\r\n        } else {\r\n            return <FormAuth submitAuth={submitAuth}/>\r\n        }\r\n    }\r\n\r\n    const submitAuth = () => {\r\n        setIsSubmitting(true)\r\n    }\r\n\r\n    // const getUsers = (token) => {\r\n    //     axios.get(\r\n    //         'http://emphasoft-test-assignment.herokuapp.com/api/v1/users/',\r\n    //         { headers: { Authorization: `Bearer ${token}` } }\r\n    //       )\r\n    //   .then((response) => {\r\n    //     console.log(response, 'response');\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error, 'error');\r\n    //   });\r\n    //   }\r\n\r\n    return  <Wrapper>\r\n                {showAuth()}\r\n                {isSubmitting && \r\n                    <p className=\"auth-link\">\r\n                        <NavLink to={\"/users\"}>Перейти на страницу пользователей</NavLink>\r\n                    </p> }\r\n            </Wrapper>\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 30px;\r\n\r\n    .success-auth {\r\n        text-align: center;\r\n        font-size: 36px;\r\n    }\r\n\r\n    .auth-link {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-size: 18px;\r\n        text-align: center;\r\n        a {\r\n\r\n            color:#c93030;\r\n            transition: color 0.2s;\r\n\r\n            &:hover {\r\n                color: red;\r\n            }\r\n        }\r\n        \r\n}\r\n`\r\n\r\nexport default ViewAuth","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { sortBy, debounce } from 'lodash'\r\nimport {ListUsers, Input} from './components'\r\n// import Cookies from 'js-cookie'\r\n\r\nconst ViewUsers = () => {\r\n\r\n    const USERS = [\r\n        {\r\n            id: 254,\r\n            first_name: 'John',\r\n            last_name: 'Doe',\r\n            username: 'Hotdog',\r\n            password: '1234abcd',\r\n            is_active: false,\r\n            is_superuser: false\r\n        },\r\n        {\r\n            id: 8,\r\n            first_name: 'Sarah',\r\n            last_name: 'Hopkins',\r\n            username: 'Unicorn',\r\n            password: '4321dcba',\r\n            is_active: false,\r\n            is_superuser: false\r\n        },\r\n        {\r\n            id: 3046,\r\n            first_name: 'Henry',\r\n            last_name: 'McMillan',\r\n            username: 'Henry2012',\r\n            password: '5678efgh',\r\n            is_active: false,\r\n            is_superuser: false\r\n        },\r\n        {\r\n            id: 200,\r\n            first_name: 'Diana',\r\n            last_name: 'Smith',\r\n            username: 'test-user',\r\n            password: '8765',\r\n            is_active: false,\r\n            is_superuser: false\r\n        },\r\n        {\r\n            id: 684,\r\n            first_name: 'Perry',\r\n            last_name: 'Johnson',\r\n            username: '16DirtyFlower16',\r\n            password: 'sandwich',\r\n            is_active: false,\r\n            is_superuser: false\r\n        },\r\n    ]\r\n\r\n    const currentUsers = USERS\r\n    const sortedUsers = sortBy(currentUsers, 'id')\r\n\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n      };\r\n\r\n      useEffect(\r\n        debounce(() => {\r\n          if (searchTerm) {\r\n            const results = sortedUsers.filter((user) =>\r\n              user.username.toLowerCase().includes(searchTerm)\r\n            );\r\n            setSearchResults(results);\r\n          }\r\n        }, 2000),\r\n        [searchTerm]\r\n      );\r\n\r\n      const showSearchResults = (searchResults) => {\r\n        if (searchTerm) {\r\n          if (searchResults.length > 0) {\r\n            return <ListUsers title=\"Найденные результаты\" users={searchResults} />;\r\n          } else return <ErrorMessage>Результатов не найдено</ErrorMessage>;\r\n        } else\r\n          return (\r\n            <ErrorMessage>Введите символ или слово в поле поиска</ErrorMessage>\r\n          );\r\n      };\r\n\r\n    //     const axios = require('axios').default;\r\n    //     const token = Cookies.get('token')\r\n    //     const getUsers = (token) => {\r\n    //     axios.get(\r\n    //         'http://emphasoft-test-assignment.herokuapp.com/api/v1/users/',\r\n    //         { headers: { Authorization: `Bearer ${token}` } }\r\n    //       )\r\n    //   .then((response) => {\r\n    //     console.log(response, 'response');\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error, 'error');\r\n    //   });\r\n    //   }\r\n\r\n      const showUsers = () => {\r\n          return <ListUsers title=\"Все пользователи\" users={sortedUsers}/>\r\n      }\r\n\r\n    \r\n    return <Wrapper>\r\n    <Input\r\n        value={searchTerm}\r\n        placeholder=\"Введите текст\"\r\n        onChange={handleChange}\r\n      />\r\n        {showSearchResults(searchResults)}\r\n      {showUsers()}\r\n    </Wrapper>\r\n}\r\n\r\nconst Wrapper = styled.div`\r\npadding: 30px;\r\n`\r\nconst ErrorMessage = styled.p`\r\nfont-family: Arial, Helvetica, sans-serif;\r\n  font-size: 18px;\r\n  color: #c93030;\r\n  margin: 0;\r\n`;\r\n\r\nexport default ViewUsers","import React from 'react'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalTheme } from \"./base/theme\";\nimport ViewAuth from './ViewAuth'\nimport ViewUsers from './ViewUsers'\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n        <ThemeProvider theme={GlobalTheme}>\n            <Switch>\n            <Route path=\"/\" exact component={ViewAuth} />\n            <Route path=\"/users\" component={ViewUsers} />\n          </Switch>\n        </ThemeProvider>\n        </BrowserRouter>\n    )\n     \n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}